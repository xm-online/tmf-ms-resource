openapi: 3.0.1
info:
    title: Resource Inventory Management
    description: This is Swagger UI environment generated for the TMF Resource Inventory
        Management specification
    version: "2.0"
servers:
    - url: https://serverRoot/api/resourceInventoryManagement/v2
paths:
    /resource:
        get:
            tags:
                - resource
            summary: List or find 'Resource' objects
            operationId: listResource
            parameters:
                - name: fields
                  in: query
                  description: Comma separated properties to display in response
                  schema:
                      type: string
                - name: '@baseType'
                  in: query
                  description: 'For filtering: Indicates<b> </b>the base type of the resource.
          For resources pf type ''Equipment'', baseType can be ''PhysicalResource''.'
                  schema:
                      type: string
                - name: '@schemaLocation'
                  in: query
                  description: 'For filtering: This field provides a link to the schema describing
          this REST resource'
                  schema:
                      type: string
                - name: '@type'
                  in: query
                  description: 'For filtering: Indicates the type of resource. For physical
          resource this will be ''Equipment'', For logical Resource this can be ''Resource
          Function'' , ''MSISDN'', ''IP Address''.'
                  schema:
                      type: string
                - name: category
                  in: query
                  description: 'For filtering: Category of the concrete resource. e.g Gold,
          Silver for MSISDN concrete resource'
                  schema:
                      type: string
                - name: endDate
                  in: query
                  description: 'For filtering: A date time( DateTime). The date till the resource
          is effective'
                  schema:
                      type: string
                      format: date-time
                - name: lifecycleState
                  in: query
                  description: 'For filtering: The life cycle state of the resource.'
                  schema:
                      type: string
                - name: name
                  in: query
                  description: 'For filtering: A string used to give a name to the resource'
                  schema:
                      type: string
                - name: startDate
                  in: query
                  description: 'For filtering: A date time( DateTime). The date from which the
          resource is effective'
                  schema:
                      type: string
                      format: date-time
                - name: version
                  in: query
                  description: 'For filtering: A field that identifies the specific version
          of an instance of a resource.'
                  schema:
                      type: string
                - name: resourceRelationship.type
                  in: query
                  description: 'For filtering: '
                  schema:
                      type: string
                - name: characteristic.name
                  in: query
                  description: 'For filtering: name of the characteristic'
                  schema:
                      type: string
                - name: characteristic.value
                  in: query
                  description: 'For filtering: value of the characteristic'
                  schema:
                      type: string
                - name: place.role
                  in: query
                  description: 'For filtering: role of the Place'
                  schema:
                      type: string
                - name: partyRole.name
                  in: query
                  description: 'For filtering: The name of the referred party role.'
                  schema:
                      type: string
                - name: partyRole.partyId
                  in: query
                  description: 'For filtering: The identifier of the engaged party that is linked
          to the PartyRole object.'
                  schema:
                      type: string
                - name: partyRole.partyName
                  in: query
                  description: 'For filtering: The name of the engaged party that is linked
          to the PartyRole object.'
                  schema:
                      type: string
                - name: relatedParty.name
                  in: query
                  description: 'For filtering: Name of the related party'
                  schema:
                      type: string
                - name: relatedParty.role
                  in: query
                  description: 'For filtering: Role of the related party.'
                  schema:
                      type: string
                - name: note.author
                  in: query
                  description: 'For filtering: Author of the note'
                  schema:
                      type: string
                - name: note.date
                  in: query
                  description: 'For filtering: Date of the note'
                  schema:
                      type: string
                      format: date-time
                - name: note.text
                  in: query
                  description: 'For filtering: Text of the note'
                  schema:
                      type: string
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Resource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /resource/{id}:
        get:
            tags:
                - resource
            summary: Retrieves a 'Resource' by Id
            operationId: retrieveResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Resource
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Resource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - resource
            summary: Updates partially a 'Resource' by Id
            operationId: updateResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Resource
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The Resource to be updated
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Resource_Update'
                required: true
            responses:
                201:
                    description: Updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Resource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: resource
    /logicalResource:
        get:
            tags:
                - logicalResource
            summary: List or find 'LogicalResource' objects
            operationId: listLogicalResource
            parameters:
                - name: fields
                  in: query
                  description: Comma separated properties to display in response
                  schema:
                      type: string
                - name: '@baseType'
                  in: query
                  description: 'For filtering: Indicates<b> </b>the base type of the resource.
          For resources pf type ''Equipment'', baseType can be ''PhysicalResource''.'
                  schema:
                      type: string
                - name: '@schemaLocation'
                  in: query
                  description: 'For filtering: This field provides a link to the schema describing
          this REST resource'
                  schema:
                      type: string
                - name: '@type'
                  in: query
                  description: 'For filtering: Indicates the type of resource. For physical
          resource this will be ''Equipment'', For logical Resource this can be ''Resource
          Function'' , ''MSISDN'', ''IP Address''.'
                  schema:
                      type: string
                - name: category
                  in: query
                  description: 'For filtering: Category of the concrete resource. e.g Gold,
          Silver for MSISDN concrete resource'
                  schema:
                      type: string
                - name: endDate
                  in: query
                  description: 'For filtering: A date time( DateTime). The date till the resource
          is effective'
                  schema:
                      type: string
                      format: date-time
                - name: lifecycleState
                  in: query
                  description: 'For filtering: The life cycle state of the resource.'
                  schema:
                      type: string
                - name: name
                  in: query
                  description: 'For filtering: A string used to give a name to the resource'
                  schema:
                      type: string
                - name: startDate
                  in: query
                  description: 'For filtering: A date time( DateTime). The date from which the
          resource is effective'
                  schema:
                      type: string
                      format: date-time
                - name: version
                  in: query
                  description: 'For filtering: A field that identifies the specific version
          of an instance of a resource.'
                  schema:
                      type: string
                - name: value
                  in: query
                  description: 'For filtering: the value of the logical resource. E.g ''0746712345''
          for  MSISDN''s'
                  schema:
                      type: string
                - name: resourceRelationship.type
                  in: query
                  description: 'For filtering: '
                  schema:
                      type: string
                - name: characteristic.name
                  in: query
                  description: 'For filtering: name of the characteristic'
                  schema:
                      type: string
                - name: characteristic.value
                  in: query
                  description: 'For filtering: value of the characteristic'
                  schema:
                      type: string
                - name: place.role
                  in: query
                  description: 'For filtering: role of the Place'
                  schema:
                      type: string
                - name: partyRole.name
                  in: query
                  description: 'For filtering: The name of the referred party role.'
                  schema:
                      type: string
                - name: partyRole.partyId
                  in: query
                  description: 'For filtering: The identifier of the engaged party that is linked
          to the PartyRole object.'
                  schema:
                      type: string
                - name: partyRole.partyName
                  in: query
                  description: 'For filtering: The name of the engaged party that is linked
          to the PartyRole object.'
                  schema:
                      type: string
                - name: relatedParty.name
                  in: query
                  description: 'For filtering: Name of the related party'
                  schema:
                      type: string
                - name: relatedParty.role
                  in: query
                  description: 'For filtering: Role of the related party.'
                  schema:
                      type: string
                - name: note.author
                  in: query
                  description: 'For filtering: Author of the note'
                  schema:
                      type: string
                - name: note.date
                  in: query
                  description: 'For filtering: Date of the note'
                  schema:
                      type: string
                      format: date-time
                - name: note.text
                  in: query
                  description: 'For filtering: Text of the note'
                  schema:
                      type: string
                - name: resourceStatus
                  in: query
                  description: 'For filtering: Resource status'
                  schema:
                    type: string
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/LogicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - logicalResource
            summary: Creates a 'LogicalResource'
            operationId: createLogicalResource
            requestBody:
                description: The Logical Resource to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogicalResource_Create'
                required: true
            responses:
                201:
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: logicalResource
    /logicalResource/{id}:
        get:
            tags:
                - logicalResource
            summary: Retrieves a 'LogicalResource' by Id
            operationId: retrieveLogicalResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Logical Resource
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/LogicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        put:
            tags:
                - logicalResource
            summary: Updates a 'LogicalResource' by Id
            operationId: updateLogicalResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Logical Resource
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The Logical Resource to be updated
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogicalResource_Update'
                required: true
            responses:
                201:
                    description: Updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: logicalResource
        delete:
            tags:
                - logicalResource
            summary: Deletes a 'LogicalResource' by Id
            operationId: deleteLogicalResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Logical Resource
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    description: Deleted
                    content: {}
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - logicalResource
            summary: Updates partially a 'LogicalResource' by Id
            operationId: patchLogicalResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Logical Resource
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The Logical Resource to be updated
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogicalResource_Update'
                required: true
            responses:
                201:
                    description: Updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: logicalResource
    /physicalResource:
        get:
            tags:
                - physicalResource
            summary: List or find 'PhysicalResource' objects
            operationId: listPhysicalResource
            parameters:
                - name: fields
                  in: query
                  description: Comma separated properties to display in response
                  schema:
                      type: string
                - name: '@baseType'
                  in: query
                  description: 'For filtering: Indicates<b> </b>the base type of the resource.
          For resources pf type ''Equipment'', baseType can be ''PhysicalResource''.'
                  schema:
                      type: string
                - name: '@schemaLocation'
                  in: query
                  description: 'For filtering: This field provides a link to the schema describing
          this REST resource'
                  schema:
                      type: string
                - name: '@type'
                  in: query
                  description: 'For filtering: Indicates the type of resource. For physical
          resource this will be ''Equipment'', For logical Resource this can be ''Resource
          Function'' , ''MSISDN'', ''IP Address''.'
                  schema:
                      type: string
                - name: category
                  in: query
                  description: 'For filtering: Category of the concrete resource. e.g Gold,
          Silver for MSISDN concrete resource'
                  schema:
                      type: string
                - name: endDate
                  in: query
                  description: 'For filtering: A date time( DateTime). The date till the resource
          is effective'
                  schema:
                      type: string
                      format: date-time
                - name: lifecycleState
                  in: query
                  description: 'For filtering: The life cycle state of the resource.'
                  schema:
                      type: string
                - name: name
                  in: query
                  description: 'For filtering: A string used to give a name to the resource'
                  schema:
                      type: string
                - name: startDate
                  in: query
                  description: 'For filtering: A date time( DateTime). The date from which the
          resource is effective'
                  schema:
                      type: string
                      format: date-time
                - name: version
                  in: query
                  description: 'For filtering: A field that identifies the specific version
          of an instance of a resource.'
                  schema:
                      type: string
                - name: manufactureDate
                  in: query
                  description: 'For filtering: This is a string attribute that defines the date
          of manufacture of this item in the fixed format "dd/mm/yyyy". This is an
          optional attribute.'
                  schema:
                      type: string
                      format: date-time
                - name: powerState
                  in: query
                  description: |-
                      For filtering: This defines the current power status of the hardware item. Values include:

                        0:  Unknown
                        1:  Not Applicable
                        2:  No Power Applied
                        3: Full Power Applied
                        4:  Power Save - Normal
                        5:  Power Save - Degraded
                        6:  Power Save - Standby
                        7:  Power Save - Critical
                        8:  Power Save - Low Power Mode
                        9:  Power Save - Unknown
                       10: Power Cycle
                       11: Power Warning
                       12: Power Off
                  schema:
                      type: string
                - name: serialNumber
                  in: query
                  description: 'For filtering: This is a string that represents a manufacturer-allocated
          number used to identify different instances of the same hardware item. The
          ModelNumber and PartNumber attributes are used to identify different types
          of hardware items. This is a REQUIRED attribute.'
                  schema:
                      type: string
                - name: versionNumber
                  in: query
                  description: 'For filtering: This is a string that identifies the version
          of this object. This is an optional attribute.'
                  schema:
                      type: string
                - name: resourceRelationship.type
                  in: query
                  description: 'For filtering: '
                  schema:
                      type: string
                - name: characteristic.name
                  in: query
                  description: 'For filtering: name of the characteristic'
                  schema:
                      type: string
                - name: characteristic.value
                  in: query
                  description: 'For filtering: value of the characteristic'
                  schema:
                      type: string
                - name: place.role
                  in: query
                  description: 'For filtering: role of the Place'
                  schema:
                      type: string
                - name: partyRole.name
                  in: query
                  description: 'For filtering: The name of the referred party role.'
                  schema:
                      type: string
                - name: partyRole.partyId
                  in: query
                  description: 'For filtering: The identifier of the engaged party that is linked
          to the PartyRole object.'
                  schema:
                      type: string
                - name: partyRole.partyName
                  in: query
                  description: 'For filtering: The name of the engaged party that is linked
          to the PartyRole object.'
                  schema:
                      type: string
                - name: relatedParty.name
                  in: query
                  description: 'For filtering: Name of the related party'
                  schema:
                      type: string
                - name: relatedParty.role
                  in: query
                  description: 'For filtering: Role of the related party.'
                  schema:
                      type: string
                - name: note.author
                  in: query
                  description: 'For filtering: Author of the note'
                  schema:
                      type: string
                - name: note.date
                  in: query
                  description: 'For filtering: Date of the note'
                  schema:
                      type: string
                      format: date-time
                - name: note.text
                  in: query
                  description: 'For filtering: Text of the note'
                  schema:
                      type: string
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PhysicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - physicalResource
            summary: Creates a 'PhysicalResource'
            operationId: createPhysicalResource
            requestBody:
                description: The Physical Resource to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PhysicalResource_Create'
                required: true
            responses:
                201:
                    description: Created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PhysicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: physicalResource
    /physicalResource/{id}:
        get:
            tags:
                - physicalResource
            summary: Retrieves a 'PhysicalResource' by Id
            operationId: retrievePhysicalResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Physical Resource
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: Ok
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PhysicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        patch:
            tags:
                - physicalResource
            summary: Updates partially a 'PhysicalResource' by Id
            operationId: updatePhysicalResource
            parameters:
                - name: id
                  in: path
                  description: Identifier of the Physical Resource
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The Physical Resource to be updated
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PhysicalResource_Update'
                required: true
            responses:
                201:
                    description: Updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PhysicalResource'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: physicalResource
    /hub:
        post:
            tags:
                - events subscription
            summary: Register a listener
            description: Sets the communication endpoint address the service instance must
                use to deliver information about its health state, execution state, failures
                and metrics.
            operationId: registerListener
            requestBody:
                description: Data containing the callback endpoint to deliver the information
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EventSubscriptionInput'
                required: true
            responses:
                201:
                    description: Subscribed
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EventSubscription'
                400:
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
            x-codegen-request-body-name: data
    /hub/{id}:
        delete:
            tags:
                - events subscription
            summary: Unregister a listener
            description: Resets the communication endpoint address the service instance
                must use to deliver information about its health state, execution state, failures
                and metrics.
            operationId: unregisterListener
            parameters:
                - name: id
                  in: path
                  description: The id of the registered listener
                  required: true
                  schema:
                      type: string
            responses:
                201:
                    description: Unsubscribed
                    content: {}
                404:
                    description: Not Found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                500:
                    description: Internal Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    schemas:
        Resource:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                href:
                    type: string
                    description: The URI for the object itself.
                id:
                    type: string
                    description: Identifier of an instance of the resource. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type.
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
            description: Resource is an abstract entity that describes the common set of
                attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.
        Resource_Update:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
            description: |-
                Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory.
                Skipped properties: id,href,id,href
        PhysicalResource:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                href:
                    type: string
                    description: The URI for the object itself.
                id:
                    type: string
                    description: Identifier of an instance of the resource. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type.
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                manufactureDate:
                    type: string
                    description: This is a string attribute that defines the date of manufacture
                        of this item in the fixed format "dd/mm/yyyy". This is an optional attribute.
                    format: date-time
                powerState:
                    type: string
                    description: |-
                        This defines the current power status of the hardware item. Values include:

                          0:  Unknown
                          1:  Not Applicable
                          2:  No Power Applied
                          3: Full Power Applied
                          4:  Power Save - Normal
                          5:  Power Save - Degraded
                          6:  Power Save - Standby
                          7:  Power Save - Critical
                          8:  Power Save - Low Power Mode
                          9:  Power Save - Unknown
                         10: Power Cycle
                         11: Power Warning
                         12: Power Off
                serialNumber:
                    type: string
                    description: This is a string that represents a manufacturer-allocated number
                        used to identify different instances of the same hardware item. The ModelNumber
                        and PartNumber attributes are used to identify different types of hardware
                        items. This is a REQUIRED attribute.
                versionNumber:
                    type: string
                    description: This is a string that identifies the version of this object.
                        This is an optional attribute.
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
            description: Physical resource is a type of resource that describes the common
                set of attributes shared by all concrete physical resources (e.g. EQUIPMENT)
                in the inventory.
        PhysicalResource_Create:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                manufactureDate:
                    type: string
                    description: This is a string attribute that defines the date of manufacture
                        of this item in the fixed format "dd/mm/yyyy". This is an optional attribute.
                    format: date-time
                powerState:
                    type: string
                    description: |-
                        This defines the current power status of the hardware item. Values include:

                          0:  Unknown
                          1:  Not Applicable
                          2:  No Power Applied
                          3: Full Power Applied
                          4:  Power Save - Normal
                          5:  Power Save - Degraded
                          6:  Power Save - Standby
                          7:  Power Save - Critical
                          8:  Power Save - Low Power Mode
                          9:  Power Save - Unknown
                         10: Power Cycle
                         11: Power Warning
                         12: Power Off
                serialNumber:
                    type: string
                    description: This is a string that represents a manufacturer-allocated number
                        used to identify different instances of the same hardware item. The ModelNumber
                        and PartNumber attributes are used to identify different types of hardware
                        items. This is a REQUIRED attribute.
                versionNumber:
                    type: string
                    description: This is a string that identifies the version of this object.
                        This is an optional attribute.
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
            description: |-
                Physical resource is a type of resource that describes the common set of attributes shared by all concrete physical resources (e.g. EQUIPMENT) in the inventory.
                Skipped properties: id,href
        PhysicalResource_Update:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                manufactureDate:
                    type: string
                    description: This is a string attribute that defines the date of manufacture
                        of this item in the fixed format "dd/mm/yyyy". This is an optional attribute.
                    format: date-time
                powerState:
                    type: string
                    description: |-
                        This defines the current power status of the hardware item. Values include:

                          0:  Unknown
                          1:  Not Applicable
                          2:  No Power Applied
                          3: Full Power Applied
                          4:  Power Save - Normal
                          5:  Power Save - Degraded
                          6:  Power Save - Standby
                          7:  Power Save - Critical
                          8:  Power Save - Low Power Mode
                          9:  Power Save - Unknown
                         10: Power Cycle
                         11: Power Warning
                         12: Power Off
                serialNumber:
                    type: string
                    description: This is a string that represents a manufacturer-allocated number
                        used to identify different instances of the same hardware item. The ModelNumber
                        and PartNumber attributes are used to identify different types of hardware
                        items. This is a REQUIRED attribute.
                versionNumber:
                    type: string
                    description: This is a string that identifies the version of this object.
                        This is an optional attribute.
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
            description: |-
                Physical resource is a type of resource that describes the common set of attributes shared by all concrete physical resources (e.g. EQUIPMENT) in the inventory.
                Skipped properties: id,href
        LogicalResource:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                href:
                    type: string
                    description: The URI for the object itself.
                id:
                    type: string
                    description: Identifier of an instance of the resource. Required to be unique
                        within the resource type.  Used in URIs as the identifier for specific
                        instances of a type.
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                resourceStatus:
                  $ref: '#/components/schemas/ResourceStatusType'
            description: Logic resource is a type of resource that describes the common
                set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN,
                IP Addresses) in the inventory.
        LogicalResource_Create:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                resourceStatus:
                  $ref: '#/components/schemas/ResourceStatusType'
            description: |-
                Logic resource is a type of resource that describes the common set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN, IP Addresses) in the inventory.
                Skipped properties: id,href
        LogicalResource_Update:
            type: object
            properties:
                '@baseType':
                    type: string
                    description: Indicates<b> </b>the base type of the resource. For resources
                        pf type 'Equipment', baseType can be 'PhysicalResource'.
                '@schemaLocation':
                    type: string
                    description: This field provides a link to the schema describing this REST
                        resource
                '@type':
                    type: string
                    description: Indicates the type of resource. For physical resource this
                        will be 'Equipment', For logical Resource this can be 'Resource Function'
                        , 'MSISDN', 'IP Address'.
                category:
                    type: string
                    description: Category of the concrete resource. e.g Gold, Silver for MSISDN
                        concrete resource
                description:
                    type: string
                    description: free-text description of the resource
                endDate:
                    type: string
                    description: A date time( DateTime). The date till the resource is effective
                    format: date-time
                lifecycleState:
                    type: string
                    description: The life cycle state of the resource.
                name:
                    type: string
                    description: A string used to give a name to the resource
                startDate:
                    type: string
                    description: A date time( DateTime). The date from which the resource is
                        effective
                    format: date-time
                version:
                    type: string
                    description: A field that identifies the specific version of an instance
                        of a resource.
                value:
                    type: string
                    description: the value of the logical resource. E.g '0746712345' for  MSISDN's
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                place:
                    $ref: '#/components/schemas/Place'
                partyRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/PartyRoleRef'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
                note:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
                resourceStatus:
                  $ref: '#/components/schemas/ResourceStatusType'
            description: |-
                Logic resource is a type of resource that describes the common set of attributes shared by all concrete logical resources (e.g. TPE, MSISDN, IP Addresses) in the inventory.
                Skipped properties: id,href
        ResourceRelationship:
            type: object
            properties:
                type:
                    type: string
                    description: |-
                        Linked Resources to the one instantiate, it can be :
                        - "reliesOn" if the Resource needs another already owned Resource to rely on
                        - "targets" or "isTargeted" (depending on the way of expressing the link) for any other kind of links that may be useful
        ResourceCharacteristic:
            type: object
            properties:
                name:
                    type: string
                    description: Name of the characteristic
                value:
                    type: string
                    description: Value of the characteristic
        Place:
            type: object
            properties:
                address:
                    type: string
                    description: A string characterizing an address (for instance a formatted
                        address or an identifier taken from an address database or an address
                        API)
                geoLocationUrl:
                    type: string
                    description: A url providing a map for localizing the place
                name:
                    type: string
                    description: A user-friendly name for the place, such as "Paris Store",
                        "London Store", "Main Home".
                role:
                    type: string
                    description: 'Role of the place (for instance: ''home delivery'', ''shop
            retrieval'')'
            description: Place defines the places where the products are sold or delivered.
        PartyRoleRef:
            type: object
            properties:
                href:
                    type: string
                    description: Reference of the product
                id:
                    type: string
                    description: Unique identifier of the product
                name:
                    type: string
                    description: The name of the referred party role.
                partyId:
                    type: string
                    description: The identifier of the engaged party that is linked to the PartyRole
                        object.
                partyName:
                    type: string
                    description: The name of the engaged party that is linked to the PartyRole
                        object.
            description: Party role reference. A party role represents the part played by
                a party in a given context.
        RelatedPartyRef:
            type: object
            properties:
                href:
                    type: string
                    description: Reference of the related party, could be a party reference
                        or a party role reference
                id:
                    type: string
                    description: Unique identifier of a related party
                name:
                    type: string
                    description: Name of the related party
                role:
                    type: string
                    description: Role of the related party.
                validFor:
                    $ref: '#/components/schemas/TimePeriod'
            description: RelatedParty reference. A related party defines party or party
                role linked to a specific entity.
        Note:
            type: object
            properties:
                author:
                    type: string
                    description: Author of the note
                date:
                    type: string
                    description: Date of the note
                    format: date-time
                text:
                    type: string
                    description: Text of the note
            description: Extra information about the ticket or a product order
        ResourceStatusType:
          type: string
          description: ResourceStatusType enumerations
          enum:
            - standby
            - alarm
            - available
            - reserved
            - unknown
            - suspended
            - in-use
        ResourceRef:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the resource
                href:
                    type: string
                id:
                    type: string
                name:
                    type: string
                    description: Name of the Resource
                state:
                    type: string
                    description: lifecycle of the resource
                type:
                    type: string
                    description: Type of the resource
                place:
                    type: array
                    items:
                        $ref: '#/components/schemas/Place'
                characteristic:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceCharacteristic'
                resourceRelationship:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceRelationship'
                relatedParty:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelatedPartyRef'
        TimePeriod:
            type: object
            properties:
                endDateTime:
                    type: string
                    description: An instant of time, ending at the TimePeriod.
                    format: date-time
                startDateTime:
                    type: string
                    description: An instant of time, starting at the TimePeriod
                    format: date-time
            description: A base / value business entity used to represent a period of time
                between two timepoints.
        EventSubscription:
            required:
                - callback
                - id
            type: object
            properties:
                id:
                    type: string
                    description: Id of the listener
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
        EventSubscriptionInput:
            required:
                - callback
            type: object
            properties:
                callback:
                    type: string
                    description: The callback being registered.
                query:
                    type: string
                    description: additional data to be passed
        Error:
            required:
                - code
                - message
            type: object
            properties:
                code:
                    type: integer
                    description: An integer coding the error type. This is given to caller so
                        he can translate them if required.
                message:
                    type: string
                    description: A short localized string that describes the error.
                description:
                    type: string
                    description: (optional) A long localized error description if needed. It
                        can contain precise information about which parameter is missing, or what
                        are the identifier acceptable values.
                infoURL:
                    type: string
                    description: (optional) A URL to online documentation that provides more
                        information about the error.
